// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ScheduleService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace QuoteResearch.Service.ScheduleService {
  public static partial class ScheduleService
  {
    static readonly string __ServiceName = "QuoteResearch.Service.ScheduleService.ScheduleService";

    static readonly grpc::Marshaller<global::QuoteResearch.Service.ScheduleService.EditHolidayRequest> __Marshaller_QuoteResearch_Service_ScheduleService_EditHolidayRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::QuoteResearch.Service.ScheduleService.EditHolidayRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::QuoteResearch.Service.ScheduleService.EditHolidayResponse> __Marshaller_QuoteResearch_Service_ScheduleService_EditHolidayResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::QuoteResearch.Service.ScheduleService.EditHolidayResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest> __Marshaller_QuoteResearch_Service_ScheduleService_EditQuoteScheduleRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse> __Marshaller_QuoteResearch_Service_ScheduleService_EditQuoteScheduleResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::QuoteResearch.Service.ScheduleService.GetScheduleRequest> __Marshaller_QuoteResearch_Service_ScheduleService_GetScheduleRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::QuoteResearch.Service.ScheduleService.GetScheduleRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::QuoteResearch.Service.ScheduleService.GetScheduleResponse> __Marshaller_QuoteResearch_Service_ScheduleService_GetScheduleResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::QuoteResearch.Service.ScheduleService.GetScheduleResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::QuoteResearch.Service.Share.Type.EmptyRequest> __Marshaller_QuoteResearch_Service_Share_Type_EmptyRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::QuoteResearch.Service.Share.Type.EmptyRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Timestamp> __Marshaller_google_protobuf_Timestamp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Timestamp.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::QuoteResearch.Service.ScheduleService.GetQuoteScheduleListResponse> __Marshaller_QuoteResearch_Service_ScheduleService_GetQuoteScheduleListResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::QuoteResearch.Service.ScheduleService.GetQuoteScheduleListResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::QuoteResearch.Service.ScheduleService.EditHolidayRequest, global::QuoteResearch.Service.ScheduleService.EditHolidayResponse> __Method_AddHoliday = new grpc::Method<global::QuoteResearch.Service.ScheduleService.EditHolidayRequest, global::QuoteResearch.Service.ScheduleService.EditHolidayResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddHoliday",
        __Marshaller_QuoteResearch_Service_ScheduleService_EditHolidayRequest,
        __Marshaller_QuoteResearch_Service_ScheduleService_EditHolidayResponse);

    static readonly grpc::Method<global::QuoteResearch.Service.ScheduleService.EditHolidayRequest, global::QuoteResearch.Service.ScheduleService.EditHolidayResponse> __Method_RemoveHoliday = new grpc::Method<global::QuoteResearch.Service.ScheduleService.EditHolidayRequest, global::QuoteResearch.Service.ScheduleService.EditHolidayResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveHoliday",
        __Marshaller_QuoteResearch_Service_ScheduleService_EditHolidayRequest,
        __Marshaller_QuoteResearch_Service_ScheduleService_EditHolidayResponse);

    static readonly grpc::Method<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest, global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse> __Method_AddSchedule = new grpc::Method<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest, global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddSchedule",
        __Marshaller_QuoteResearch_Service_ScheduleService_EditQuoteScheduleRequest,
        __Marshaller_QuoteResearch_Service_ScheduleService_EditQuoteScheduleResponse);

    static readonly grpc::Method<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest, global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse> __Method_RemoveSchedule = new grpc::Method<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest, global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveSchedule",
        __Marshaller_QuoteResearch_Service_ScheduleService_EditQuoteScheduleRequest,
        __Marshaller_QuoteResearch_Service_ScheduleService_EditQuoteScheduleResponse);

    static readonly grpc::Method<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest, global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse> __Method_UpdateSchedule = new grpc::Method<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest, global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSchedule",
        __Marshaller_QuoteResearch_Service_ScheduleService_EditQuoteScheduleRequest,
        __Marshaller_QuoteResearch_Service_ScheduleService_EditQuoteScheduleResponse);

    static readonly grpc::Method<global::QuoteResearch.Service.ScheduleService.GetScheduleRequest, global::QuoteResearch.Service.ScheduleService.GetScheduleResponse> __Method_GetSchedule = new grpc::Method<global::QuoteResearch.Service.ScheduleService.GetScheduleRequest, global::QuoteResearch.Service.ScheduleService.GetScheduleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSchedule",
        __Marshaller_QuoteResearch_Service_ScheduleService_GetScheduleRequest,
        __Marshaller_QuoteResearch_Service_ScheduleService_GetScheduleResponse);

    static readonly grpc::Method<global::QuoteResearch.Service.Share.Type.EmptyRequest, global::Google.Protobuf.WellKnownTypes.Timestamp> __Method_GetScheduleUpdateTime = new grpc::Method<global::QuoteResearch.Service.Share.Type.EmptyRequest, global::Google.Protobuf.WellKnownTypes.Timestamp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetScheduleUpdateTime",
        __Marshaller_QuoteResearch_Service_Share_Type_EmptyRequest,
        __Marshaller_google_protobuf_Timestamp);

    static readonly grpc::Method<global::QuoteResearch.Service.Share.Type.EmptyRequest, global::QuoteResearch.Service.ScheduleService.GetQuoteScheduleListResponse> __Method_GetScheduleList = new grpc::Method<global::QuoteResearch.Service.Share.Type.EmptyRequest, global::QuoteResearch.Service.ScheduleService.GetQuoteScheduleListResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetScheduleList",
        __Marshaller_QuoteResearch_Service_Share_Type_EmptyRequest,
        __Marshaller_QuoteResearch_Service_ScheduleService_GetQuoteScheduleListResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::QuoteResearch.Service.ScheduleService.ScheduleServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ScheduleService</summary>
    [grpc::BindServiceMethod(typeof(ScheduleService), "BindService")]
    public abstract partial class ScheduleServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::QuoteResearch.Service.ScheduleService.EditHolidayResponse> AddHoliday(global::QuoteResearch.Service.ScheduleService.EditHolidayRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::QuoteResearch.Service.ScheduleService.EditHolidayResponse> RemoveHoliday(global::QuoteResearch.Service.ScheduleService.EditHolidayRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse> AddSchedule(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse> RemoveSchedule(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse> UpdateSchedule(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::QuoteResearch.Service.ScheduleService.GetScheduleResponse> GetSchedule(global::QuoteResearch.Service.ScheduleService.GetScheduleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Timestamp> GetScheduleUpdateTime(global::QuoteResearch.Service.Share.Type.EmptyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::QuoteResearch.Service.ScheduleService.GetQuoteScheduleListResponse> GetScheduleList(global::QuoteResearch.Service.Share.Type.EmptyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ScheduleService</summary>
    public partial class ScheduleServiceClient : grpc::ClientBase<ScheduleServiceClient>
    {
      /// <summary>Creates a new client for ScheduleService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ScheduleServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ScheduleService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ScheduleServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ScheduleServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ScheduleServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::QuoteResearch.Service.ScheduleService.EditHolidayResponse AddHoliday(global::QuoteResearch.Service.ScheduleService.EditHolidayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddHoliday(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::QuoteResearch.Service.ScheduleService.EditHolidayResponse AddHoliday(global::QuoteResearch.Service.ScheduleService.EditHolidayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddHoliday, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::QuoteResearch.Service.ScheduleService.EditHolidayResponse> AddHolidayAsync(global::QuoteResearch.Service.ScheduleService.EditHolidayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddHolidayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::QuoteResearch.Service.ScheduleService.EditHolidayResponse> AddHolidayAsync(global::QuoteResearch.Service.ScheduleService.EditHolidayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddHoliday, null, options, request);
      }
      public virtual global::QuoteResearch.Service.ScheduleService.EditHolidayResponse RemoveHoliday(global::QuoteResearch.Service.ScheduleService.EditHolidayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHoliday(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::QuoteResearch.Service.ScheduleService.EditHolidayResponse RemoveHoliday(global::QuoteResearch.Service.ScheduleService.EditHolidayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveHoliday, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::QuoteResearch.Service.ScheduleService.EditHolidayResponse> RemoveHolidayAsync(global::QuoteResearch.Service.ScheduleService.EditHolidayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHolidayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::QuoteResearch.Service.ScheduleService.EditHolidayResponse> RemoveHolidayAsync(global::QuoteResearch.Service.ScheduleService.EditHolidayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveHoliday, null, options, request);
      }
      public virtual global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse AddSchedule(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSchedule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse AddSchedule(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddSchedule, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse> AddScheduleAsync(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddScheduleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse> AddScheduleAsync(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddSchedule, null, options, request);
      }
      public virtual global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse RemoveSchedule(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveSchedule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse RemoveSchedule(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveSchedule, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse> RemoveScheduleAsync(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveScheduleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse> RemoveScheduleAsync(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveSchedule, null, options, request);
      }
      public virtual global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse UpdateSchedule(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSchedule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse UpdateSchedule(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSchedule, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse> UpdateScheduleAsync(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateScheduleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse> UpdateScheduleAsync(global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSchedule, null, options, request);
      }
      public virtual global::QuoteResearch.Service.ScheduleService.GetScheduleResponse GetSchedule(global::QuoteResearch.Service.ScheduleService.GetScheduleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSchedule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::QuoteResearch.Service.ScheduleService.GetScheduleResponse GetSchedule(global::QuoteResearch.Service.ScheduleService.GetScheduleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSchedule, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::QuoteResearch.Service.ScheduleService.GetScheduleResponse> GetScheduleAsync(global::QuoteResearch.Service.ScheduleService.GetScheduleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetScheduleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::QuoteResearch.Service.ScheduleService.GetScheduleResponse> GetScheduleAsync(global::QuoteResearch.Service.ScheduleService.GetScheduleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSchedule, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Timestamp GetScheduleUpdateTime(global::QuoteResearch.Service.Share.Type.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetScheduleUpdateTime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Timestamp GetScheduleUpdateTime(global::QuoteResearch.Service.Share.Type.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetScheduleUpdateTime, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Timestamp> GetScheduleUpdateTimeAsync(global::QuoteResearch.Service.Share.Type.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetScheduleUpdateTimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Timestamp> GetScheduleUpdateTimeAsync(global::QuoteResearch.Service.Share.Type.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetScheduleUpdateTime, null, options, request);
      }
      public virtual global::QuoteResearch.Service.ScheduleService.GetQuoteScheduleListResponse GetScheduleList(global::QuoteResearch.Service.Share.Type.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetScheduleList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::QuoteResearch.Service.ScheduleService.GetQuoteScheduleListResponse GetScheduleList(global::QuoteResearch.Service.Share.Type.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetScheduleList, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::QuoteResearch.Service.ScheduleService.GetQuoteScheduleListResponse> GetScheduleListAsync(global::QuoteResearch.Service.Share.Type.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetScheduleListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::QuoteResearch.Service.ScheduleService.GetQuoteScheduleListResponse> GetScheduleListAsync(global::QuoteResearch.Service.Share.Type.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetScheduleList, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ScheduleServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ScheduleServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ScheduleServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddHoliday, serviceImpl.AddHoliday)
          .AddMethod(__Method_RemoveHoliday, serviceImpl.RemoveHoliday)
          .AddMethod(__Method_AddSchedule, serviceImpl.AddSchedule)
          .AddMethod(__Method_RemoveSchedule, serviceImpl.RemoveSchedule)
          .AddMethod(__Method_UpdateSchedule, serviceImpl.UpdateSchedule)
          .AddMethod(__Method_GetSchedule, serviceImpl.GetSchedule)
          .AddMethod(__Method_GetScheduleUpdateTime, serviceImpl.GetScheduleUpdateTime)
          .AddMethod(__Method_GetScheduleList, serviceImpl.GetScheduleList).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ScheduleServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddHoliday, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::QuoteResearch.Service.ScheduleService.EditHolidayRequest, global::QuoteResearch.Service.ScheduleService.EditHolidayResponse>(serviceImpl.AddHoliday));
      serviceBinder.AddMethod(__Method_RemoveHoliday, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::QuoteResearch.Service.ScheduleService.EditHolidayRequest, global::QuoteResearch.Service.ScheduleService.EditHolidayResponse>(serviceImpl.RemoveHoliday));
      serviceBinder.AddMethod(__Method_AddSchedule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest, global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse>(serviceImpl.AddSchedule));
      serviceBinder.AddMethod(__Method_RemoveSchedule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest, global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse>(serviceImpl.RemoveSchedule));
      serviceBinder.AddMethod(__Method_UpdateSchedule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleRequest, global::QuoteResearch.Service.ScheduleService.EditQuoteScheduleResponse>(serviceImpl.UpdateSchedule));
      serviceBinder.AddMethod(__Method_GetSchedule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::QuoteResearch.Service.ScheduleService.GetScheduleRequest, global::QuoteResearch.Service.ScheduleService.GetScheduleResponse>(serviceImpl.GetSchedule));
      serviceBinder.AddMethod(__Method_GetScheduleUpdateTime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::QuoteResearch.Service.Share.Type.EmptyRequest, global::Google.Protobuf.WellKnownTypes.Timestamp>(serviceImpl.GetScheduleUpdateTime));
      serviceBinder.AddMethod(__Method_GetScheduleList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::QuoteResearch.Service.Share.Type.EmptyRequest, global::QuoteResearch.Service.ScheduleService.GetQuoteScheduleListResponse>(serviceImpl.GetScheduleList));
    }

  }
}
#endregion
